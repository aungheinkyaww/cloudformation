AWSTemplateFormatVersion: "2010-09-09"
Description: 'Private Subnets in ap-southeast-1 default'
Resources:
  customSGVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '172.31.0.0/16'
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: 'Name'
          Value: 'custom VPC'

  custominternetgateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: 'Name'
          Value: 'customigw'

  customvpcGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        !Ref custominternetgateway
      VpcId: 
        !Ref customSGVPC

  privateSubnet1:  #privatesubnet1
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-1a
      CidrBlock: '172.31.48.0/20'
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: 'Name'
          Value: 'default-private-subnet1'
      VpcId: 
         !Ref customSGVPC
  routeTableforPrivateSubnet1:  #routetable
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'default-private-subnet1'
      VpcId: 
        !Ref customSGVPC
  privateSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        !Ref routeTableforPrivateSubnet1
      SubnetId:
        !Ref privateSubnet1
  defaultRouteForIGW:
    Type: AWS::EC2::Route
    DependsOn: customvpcGatewayAttachment
    Properties:
      RouteTableId: !Ref routeTableforPrivateSubnet1
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref custominternetgateway


  privateSubnet2:  #privatesubnet2
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-1b
      CidrBlock: '172.31.64.0/20'
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: 'Name'
          Value: 'default-private-subnet2'
      VpcId: 
        !Ref customSGVPC
  routeTableforPrivateSubnet2:   #routetable
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'default-private-subnet2'
      VpcId: 
        !Ref customSGVPC
  privateSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        !Ref routeTableforPrivateSubnet2
      SubnetId:
        !Ref privateSubnet2
  defaultRouteForIGW:
    Type: AWS::EC2::Route
    DependsOn: customvpcGatewayAttachment
    Properties:
      RouteTableId: !Ref routeTableforPrivateSubnet2
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref custominternetgateway


  privateSubnet3:  #privatesubnet3
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-southeast-1c
      CidrBlock: '172.31.80.0/20'
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: 'Name'
          Value: 'default-private-subnet3'
      VpcId: 
        !Ref customSGVPC
  routeTableforPrivateSubnet3:   #routetable
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'default-private-subnet3'
      VpcId: 
        !Ref customSGVPC
  privateSubnet3RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        !Ref routeTableforPrivateSubnet3
      SubnetId:
        !Ref privateSubnet3
  defaultRouteForIGW:
    Type: AWS::EC2::Route
    DependsOn: customvpcGatewayAttachment
    Properties:
      RouteTableId: !Ref routeTableforPrivateSubnet3
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref custominternetgateway

